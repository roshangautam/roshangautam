{"componentChunkName":"component---src-templates-blog-post-js","path":"/how-to-create-blog-azure-static-web-app/","result":{"data":{"site":{"siteMetadata":{"title":"Reveries of a software engineer"}},"markdownRemark":{"id":"86708dc3-76d0-507a-94c2-70349ca80f58","excerpt":"In the last article we looked at how we can run a personal blog from github pages for free. In this article we will learn you how to deploy the same blog as an…","html":"<p style=\"text-align: center;\">\n  <img src=\"/5f16c897f756084c73f0df782d8a0baf/personal-websites-101.svg\">\n</p>\n<p>In the last <a href=\"https://roshangautam.com/how-to-create-personal-blog-gatsby-github-pages-github-actions/\">article</a> we looked at how we can run a personal blog from github pages for free. In this article we will learn you how to deploy the same blog as an <a href=\"https://azure.microsoft.com/en-us/services/app-service/static/\">Azure Static Web App</a> aka SWA. Everything is still the same except this time we will configure a workflow which will publish the blog in Azure instead of Github. SWA is one of Azures free offerings.</p>\n<h2>Getting Started</h2>\n<h3>Azure</h3>\n<p>Let’s start with setting up a personal account in Azure. Navigate to <a href=\"https://portal.azure.com/\">Azure Portal</a> and either signup for a new account or signin to your existing account.</p>\n<blockquote>\n<p>If you don’t have an Azure account, please visit [<a href=\"https://portal.azure.com/\">Azure</a> and signup for a free account. Azure offers quite a few free offerings including Static Web Apps. Please dont be alarmed if you were asked to provide a credit card number. You wouldn’t be charged anything if you stay within the free offerings.</p>\n</blockquote>\n<p>We will use Gatsby as our blog framework. Please visit my last <a href=\"https://roshangautam.com/how-to-create-personal-blog-gatsby-github-pages-github-actions/\">article</a> to setup the project and get your blog ready.</p>\n<h3>Install required tools</h3>\n<p>Install the following in addition to the tools used in the last article. Skip this step if you already have’em</p>\n<ul>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-azurestaticwebapps\">VS Code SWA Extension</a> -</li>\n</ul>\n<h3>Project Setup</h3>\n<p>Let’s create a new Gatsby site using the <a href=\"https://www.gatsbyjs.com/starters/gatsbyjs/gatsby-starter-blog/\">blog starter template</a>. You can use any other starter templates listed at <a href=\"https://www.gatsbyjs.com/starters\">Gatsby’s website</a>. Fire up a terminal of your choice and execute the following command. This is where the blog will be created in your machine, so pick a desired location.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">gatsby new my-awesome-blog https://github.com/gatsbyjs/gatsby-starter-blog</code></pre></div>\n<p>Now you will open <code class=\"language-text\">gatsby-config.js</code> to update basic settings for the newly created blog. Locate <code class=\"language-text\">siteMedataData</code> and make the necessary changes by updating site title, author name etc. All the markdown content is located at <code class=\"language-text\">app/content/blog</code> where each article is in its own folder.</p>\n<p>Now let’s create a new github repository called <code class=\"language-text\">my-awesome-blog</code>. You can either visit <a href=\"https://github.com\">Github</a> or use <a href=\"https://hub.github.com/\">hub</a> from your command line to create your new repository. Once you are done creating the repository, fire up your favorite terminal and execute the following commands</p>\n<blockquote>\n<p>Important : Replace username with your github username and repository with the name of newly created github repository.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">git remote add origin git@github.com:my-awesome-github-username/my-awesome-blog.git</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">git commit -m &quot;Initial Commit&quot;</code></pre></div>\n<p>Push your changes to github</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">git push --set-upstream origin master</code></pre></div>\n<h4>Configure auto publishing</h4>\n<p>The idea is to setup a workflow such that every new commit to the master branch would automatically publish it to github pages. To achieve this we will complete the following one time setup steps</p>\n<h5>Create an access token</h5>\n<p>First, let’s create an access token. We will use this token in the workflow as a secret variable called <code class=\"language-text\">ACCESS_TOKEN</code> in a few minutes</p>\n<ul>\n<li>Use the instructions listed <a href=\"https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token\">here</a> to create an access token with <code class=\"language-text\">repo</code> permissions</li>\n<li>Use the instructions listed <a href=\"https://docs.github.com/en/actions/reference/encrypted-secrets#creating-encrypted-secrets\">here</a> to create a secret called <code class=\"language-text\">ACCESS_TOKEN</code> to use in the workflow</li>\n</ul>\n<h5>Create a github action</h5>\n<p>You can create a github action in two different ways.</p>\n<ul>\n<li>By adding a <code class=\"language-text\">.yml</code> file to the root of your project under <code class=\"language-text\">github/.workflows</code> directory.</li>\n<li>OR, by navigating to your repository in github and using the <code class=\"language-text\">New Worflow</code> option under <code class=\"language-text\">Actions</code> tab.</li>\n</ul>\n<p>The latter will automatically create a commit and push it to your default branch in github.</p>\n<p>In this blog we will use the first option. Let’s start by creating the directories and the file. Run the following commands from the root of the project</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">mkdir .github &amp;&amp; mkdir .github\\workflows\ntouch .github\\workflows\\azure.yml</code></pre></div>\n<h5>Configure the workflow</h5>\n<p>Open <code class=\"language-text\">azure.yml</code> in an editor and paste the following content</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Azure\n      \n<span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">skip_deploy_on_missing_secrets</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  \n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> main\n  <span class=\"token key atrule\">pull_request</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">types</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>opened<span class=\"token punctuation\">,</span> synchronize<span class=\"token punctuation\">,</span> reopened<span class=\"token punctuation\">,</span> closed<span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> main\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build_and_deploy_job</span><span class=\"token punctuation\">:</span>  \n    <span class=\"token key atrule\">if</span><span class=\"token punctuation\">:</span> github.event_name == 'push' <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> (github.event_name == 'pull_request' <span class=\"token important\">&amp;&amp;</span> github.event.action <span class=\"token tag\">!=</span> 'closed')\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build and Deploy Job\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> azure\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v2\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">submodules</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build And Deploy\n        <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> builddeploy\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> Azure/static<span class=\"token punctuation\">-</span>web<span class=\"token punctuation\">-</span>apps<span class=\"token punctuation\">-</span>deploy@v1\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">azure_static_web_apps_api_token</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.DEPLOYMENT_TOKEN <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n          <span class=\"token key atrule\">repo_token</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.GITHUB_TOKEN <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token comment\"># Used for Github integrations (i.e. PR comments)</span>\n          <span class=\"token key atrule\">action</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"upload\"</span>\n          <span class=\"token comment\">###### Repository/Build Configurations - These values can be configured to match your app requirements. ######</span>\n          <span class=\"token key atrule\">app_location</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"app\"</span> <span class=\"token comment\"># App source code path</span>\n          <span class=\"token key atrule\">api_location</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"api\"</span> <span class=\"token comment\"># Api source code path - optional</span>\n          <span class=\"token key atrule\">output_location</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span> <span class=\"token comment\"># Built app content directory - optional</span>\n          <span class=\"token comment\">###### End of Repository/Build Configurations ######</span>\n\n  <span class=\"token key atrule\">close_pull_request_job</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">if</span><span class=\"token punctuation\">:</span> github.event_name == 'pull_request' <span class=\"token important\">&amp;&amp;</span> github.event.action == 'closed'\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Close Pull Request Job\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> azure\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Close Pull Request\n        <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> closepullrequest\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> Azure/static<span class=\"token punctuation\">-</span>web<span class=\"token punctuation\">-</span>apps<span class=\"token punctuation\">-</span>deploy@v1\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">azure_static_web_apps_api_token</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.DEPLOYMENT_TOKEN <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n          <span class=\"token key atrule\">action</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"close\"</span></code></pre></div>\n<p>For more information regarding Static Web App workflow configurations, please visit: <a href=\"https://aka.ms/swaworkflowconfig\">https://aka.ms/swaworkflowconfig</a></p>\n<p>Next create a commit</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">git commit -m &quot;Add publishing workflow for Azure static web app&quot;</code></pre></div>\n<p>And push your changes to github</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">git push</code></pre></div>\n<p>Now navigate to the actions tab in github. You should observe a workflow action running. Wait until it completes.</p>\n<p>As soon as the workflow completes successfully, your site should be running in Azure Static Web app.</p>\n<p>Awesome Job !!!</p>\n<h4>Publishing Workflow</h4>\n<p>Now whenever you want to add a new article to your blog or update your sites content, you would add/update markdown files to your new created github repository. You can do so in different ways.</p>\n<ul>\n<li>Add/update markdown files from github using their web editor and save. This will automatically create a commit in the github repository.</li>\n<li>OR, Add/update content locally, create a commit and push it to the remote github repository.</li>\n</ul>\n<p>Pushing a commit to the master branch will trigger the workflow we created above and publish your site to Azure SWA.</p>\n<p>If you want to add/update content locally first:</p>\n<ol>\n<li>Make changes in <code class=\"language-text\">content/blog</code> folder</li>\n</ol>\n<blockquote>\n<p>To preivew changes locally run <code class=\"language-text\">gatsby develop</code> from the root of your project folder. This will start a localhost server pointing to the folder in your machine. This also watches for changes and referesh the browser automatically.</p>\n</blockquote>\n<ol start=\"2\">\n<li>Create a commit</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">git commit -m &quot;new article xyz&quot;</code></pre></div>\n<ol start=\"3\">\n<li>Push your changes to github</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">git push</code></pre></div>\n<p>This should start the worflow we configured above and publish any new changes to Azure SWA.</p>\n<p><strong><em>Thats it folks !!!</em></strong></p>","frontmatter":{"title":"How to create a personal blog using Azure Static Web App & Gatsby","date":"December 21, 2022","description":"In this article we will explore a set of tools and services which will let you build a personal blog and help setup an automated publishing pipeline.","coverImage":"/assets/images/posts/covers/personal-websites-101.svg"}},"previous":{"fields":{"slug":"/how-to-create-personal-blog-gatsby-github-pages-github-actions/"},"frontmatter":{"title":"How to create a personal blog using Gatsby, Github Pages & Github Actions"}},"next":{"fields":{"slug":"/mysql-best-practices/"},"frontmatter":{"title":"Best practices for general MySql administration"}}},"pageContext":{"id":"86708dc3-76d0-507a-94c2-70349ca80f58","previousPostId":"803ee711-62d2-59ed-9e24-6f1d60c6fa45","nextPostId":"f1386922-958a-5b23-91b9-cb9d24461421"}},"staticQueryHashes":["2114561082","2841359383"],"slicesMap":{}}