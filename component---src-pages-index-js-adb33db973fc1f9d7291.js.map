{"version":3,"file":"component---src-pages-index-js-adb33db973fc1f9d7291.js","mappings":"iRAiEA,UA1DkB,IAAyB,IAAD,MAAvB,KAAEA,EAAI,SAAEC,GAAU,EACnC,MAAMC,GAAkC,QAAtB,EAAAF,EAAKG,KAAKC,oBAAY,aAAtB,EAAwBC,QAAK,QACzCC,EAAQN,EAAKO,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAM,CAACR,SAAUA,EAAUI,MAAOH,GACjC,gBAAC,IAAG,CAACG,MAAM,kBACX,gBAAC,IAAG,MACJ,yBAAG,8JAUP,gBAAC,IAAM,CAACJ,SAAUA,EAAUI,MAAOH,GACjC,gBAAC,IAAG,CAACG,MAAM,kBACX,gBAAC,IAAG,MACJ,sBAAIK,MAAO,CAAEC,UAAU,SACpBL,EAAMM,KAAIC,IACT,MAAMR,EAAQQ,EAAKC,YAAYT,OAASQ,EAAKE,OAAOC,KAEpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,2BACEE,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAI,CAACC,GAAIT,EAAKE,OAAOC,KAAMO,SAAS,OACnC,wBAAMA,SAAS,YAAYlB,KAG/B,6BAAQQ,EAAKC,YAAYU,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQb,EAAKC,YAAYa,aAAed,EAAKe,SAE/CL,SAAS,kBAIZ,KAIJ,EA4Bb,IAAIM,GAAiB,EAEd,MAAMC,EAAwB,KACjC,IAAeC,EACPC,EAKHH,IANUE,EAOL,6pCANFC,EAAIC,SAASC,cAAc,WAC7BC,KAAI,kBACNH,EAAEI,UAAYL,EACdE,SAASI,qBAAqB,QAAQ,GAAGC,YAAYN,GAYrDH,GAAiB,EACrB,EAGSU,EAAgB,IAAiC,IAAhC,SAAEtC,EAAQ,aAAEuC,GAAc,EACpDC,OAAOC,YAAYC,eAAe,C","sources":["webpack://roshan-gautam-blog/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"Roshan Gautam\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"Roshan Gautam\" />\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\nlet injectedScript = false\n\nexport const onInitialClientRender = () => {\n    function addJS(jsCode) {\n        var s = document.createElement(`script`);\n        s.type = `text/javascript`;\n        s.innerText = jsCode;\n        document.getElementsByTagName(`head`)[0].appendChild(s);\n    }\n    if (!injectedScript) {\n        addJS(`\n    var appInsights = window.appInsights || function (a) {\n        function b(a) { c[a] = function () { var b = arguments; c.queue.push(function () { c[a].apply(c, b) }) } } var c = { config: a }, d = document, e = window; setTimeout(function () { var b = d.createElement(\"script\"); b.src = a.url || \"https://az416426.vo.msecnd.net/scripts/a/ai.0.js\", d.getElementsByTagName(\"script\")[0].parentNode.appendChild(b) }); try { c.cookie = d.cookie } catch (a) { } c.queue = []; for (var f = [\"Event\", \"Exception\", \"Metric\", \"PageView\", \"Trace\", \"Dependency\"]; f.length;)b(\"track\" + f.pop()); if (b(\"setAuthenticatedUserContext\"), b(\"clearAuthenticatedUserContext\"), b(\"startTrackEvent\"), b(\"stopTrackEvent\"), b(\"startTrackPage\"), b(\"stopTrackPage\"), b(\"flush\"), !a.disableExceptionTracking) { f = \"onerror\", b(\"_\" + f); var g = e[f]; e[f] = function (a, b, d, e, h) { var i = g && g(a, b, d, e, h); return !0 !== i && c[\"_\" + f](a, b, d, e, h), i } } return c\n    }({\n        instrumentationKey: \"35cc108f-453e-4683-86c0-0565439548d6\"\n    });\n\n    window.appInsights = appInsights, appInsights.queue && 0 === appInsights.queue.length && appInsights.trackPageView();\n      `);\n        injectedScript = true;\n    }\n}\n\nexport const onRouteUpdate = ({ location, prevLocation }) => {\n    window.appInsights.trackPageView();\n}"],"names":["data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","length","style","listStyle","map","post","frontmatter","fields","slug","key","className","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","injectedScript","onInitialClientRender","jsCode","s","document","createElement","type","innerText","getElementsByTagName","appendChild","onRouteUpdate","prevLocation","window","appInsights","trackPageView"],"sourceRoot":""}